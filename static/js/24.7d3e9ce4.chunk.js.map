{"version":3,"sources":["pages/chart/index.tsx"],"names":["Container","styled","div","PieChartLayout","LineChartLayout","Chart","useState","pieData","setPieData","lineData","setLineData","useEffect","PIE_CAHRT_DATA_JSON","LINE_CAHRT_DATA_JSON","data","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderColor","from","modifiers","arcLinkLabelsColor","arcLabelsTextColor","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style","axisBottom","tickSize","tickPadding","axisLeft","enablePointLabel","animate","useMesh"],"mappings":"w4BAwGMA,EAAYC,IAAOC,IAAV,iKASTC,EAAiBF,IAAOC,IAAV,oEAKdE,EAAkBH,IAAOC,IAAV,oEAKNG,UAlHS,WACpB,MAA8BC,mBAAc,IAA5C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAc,IAA9C,mBAAOG,EAAP,KAAiBC,EAAjB,KAeA,OALAC,qBAAU,WAPNH,EAAWI,GAIXF,EAAYG,KAMb,IAGC,eAACb,EAAD,WACI,cAACG,EAAD,UACI,cAAC,IAAD,CACIW,KAAMP,EACNQ,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,wBAAyB,EACzBC,YAAa,CACTC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAE3BC,mBAAoB,CAAEF,KAAM,SAC5BG,mBAAoB,CAChBH,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAE3BG,QAAS,CACL,CACIC,OAAQ,SACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,cAAe,gBACfC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHP,cAAe,gBAS3C,cAAClC,EAAD,UACI,cAAC,IAAD,CACIU,KAAML,EACNM,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,IAAKC,KAAM,IACjD2B,WAAY,CACRC,SAAU,EACVC,YAAa,GAEjBC,SAAU,CACNF,SAAU,GAEdG,kBAAkB,EAClBC,SAAS,EACTC,SAAS,EACTvB,QAAS,CACL,CACIC,OAAQ,eACRC,UAAW,MACXQ,cAAe,gBACfH,UAAW,GACXC,WAAY,GACZJ,WAAY,EACZC,WAAY","file":"static/js/24.7d3e9ce4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\nimport PIE_CAHRT_DATA_JSON from './pieChartData.json';\r\nimport LINE_CAHRT_DATA_JSON from './lineChartData.json';\r\n\r\nconst Chart: React.FC = () => {\r\n    const [pieData, setPieData] = useState<any>('');\r\n    const [lineData, setLineData] = useState<any>('');\r\n\r\n    const onReadPie = () => {\r\n        setPieData(PIE_CAHRT_DATA_JSON);\r\n    };\r\n\r\n    const onReadLine = () => {\r\n        setLineData(LINE_CAHRT_DATA_JSON);\r\n    };\r\n\r\n    useEffect(() => {\r\n        onReadPie();\r\n        onReadLine();\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <PieChartLayout>\r\n                <ResponsivePie\r\n                    data={pieData}\r\n                    margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n                    innerRadius={0.5}\r\n                    padAngle={0.7}\r\n                    cornerRadius={3}\r\n                    activeOuterRadiusOffset={8}\r\n                    borderColor={{\r\n                        from: 'color',\r\n                        modifiers: [['darker', 0.2]],\r\n                    }}\r\n                    arcLinkLabelsColor={{ from: 'color' }}\r\n                    arcLabelsTextColor={{\r\n                        from: 'color',\r\n                        modifiers: [['darker', 2]],\r\n                    }}\r\n                    legends={[\r\n                        {\r\n                            anchor: 'bottom',\r\n                            direction: 'row',\r\n                            justify: false,\r\n                            translateX: 0,\r\n                            translateY: 56,\r\n                            itemsSpacing: 0,\r\n                            itemWidth: 100,\r\n                            itemHeight: 18,\r\n                            itemTextColor: '#999',\r\n                            itemDirection: 'left-to-right',\r\n                            itemOpacity: 1,\r\n                            symbolSize: 18,\r\n                            symbolShape: 'circle',\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemTextColor: '#000',\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]}\r\n                />\r\n            </PieChartLayout>\r\n\r\n            <LineChartLayout>\r\n                <ResponsiveLine\r\n                    data={lineData}\r\n                    margin={{ top: 60, right: 60, bottom: 100, left: 60 }}\r\n                    axisBottom={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                    }}\r\n                    axisLeft={{\r\n                        tickSize: 5,\r\n                    }}\r\n                    enablePointLabel={true}\r\n                    animate={true}\r\n                    useMesh={true}\r\n                    legends={[\r\n                        {\r\n                            anchor: 'bottom-right',\r\n                            direction: 'row',\r\n                            itemDirection: 'left-to-right',\r\n                            itemWidth: 80,\r\n                            itemHeight: 20,\r\n                            translateX: 0,\r\n                            translateY: 60,\r\n                        },\r\n                    ]}\r\n                />\r\n            </LineChartLayout>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 60px;\r\n`;\r\n\r\nconst PieChartLayout = styled.div`\r\n    flex: 0 0 50%;\r\n    height: 500px;\r\n`;\r\n\r\nconst LineChartLayout = styled.div`\r\n    flex: 0 0 50%;\r\n    height: 500px;\r\n`;\r\n\r\nexport default Chart;\r\n"],"sourceRoot":""}