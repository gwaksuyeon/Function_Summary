{"version":3,"sources":["pages/reorder/index.tsx","style/mixin.ts"],"names":["LazyImage","loadable","Container","styled","div","HorizontalLayout","HorizontalContentsLayout","VerticalLayout","VerticalContentsLayout","ContentsLayout","ImageLayout","Title","p","Ellipsis","Contents","Reorder","useState","verticalData","setVerticalData","horizontalData","setHorizontalData","onReorder","list","startIndex","endIndex","result","splice","removed","useEffect","DATA_JSON","onDragEnd","destination","items","source","index","droppableId","direction","provided","droppableProps","ref","innerRef","map","obj","inx","draggableId","no","draggableProps","dragHandleProps","src","imageUrl","title","contents","placeholder","clamp","css"],"mappings":"y3FAQMA,EAAYC,aAAS,kBAAM,uDAoJ3BC,EAAYC,IAAOC,IAAV,iKASTC,EAAmBF,IAAOC,IAAV,gGAMhBE,EAA2BH,IAAOC,IAAV,8LAUxBG,EAAiBJ,IAAOC,IAAV,uEAKdI,EAAyBL,IAAOC,IAAV,6KAStBK,EAAiBN,IAAOC,IAAV,0BAEdM,EAAcP,IAAOC,IAAV,uEAKXO,EAAQR,IAAOS,EAAV,2GAILC,YAAS,IAGTC,EAAWX,IAAOS,EAAV,qCACRC,YAAS,IAGAE,UA3MW,WACtB,MAAwCC,mBAAc,IAAtD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CF,mBAAc,IAA1D,mBAAOG,EAAP,KAAuBC,EAAvB,KAOMC,EAAY,SAACC,EAAWC,EAAoBC,GAC9C,IAAMC,EAAM,YAAOH,GACnB,EAAkBG,EAAOC,OAAOH,EAAY,GAArCI,EAAP,oBAGA,OAFAF,EAAOC,OAAOF,EAAU,EAAGG,GAEpBF,GAmCX,OAJAG,qBAAU,WAxCNV,EAAgBW,GAChBT,EAAkBS,KAyCnB,IAGC,eAAC3B,EAAD,WACI,cAACG,EAAD,UACKc,GACG,cAAC,IAAD,CAAiBW,UAnCJ,SAACL,GAC1B,GAAKA,EAAOM,YAAZ,CAIA,IAAMC,EAAQX,EACVF,EACAM,EAAOQ,OAAOC,MACdT,EAAOM,YAAYG,OAEvBd,EAAkBY,KAyBN,SACI,cAAC,IAAD,CACIG,YAAY,WACZC,UAAU,aAFd,SAGK,SAACC,GAAD,OACG,eAAC/B,EAAD,2BACQ+B,EAASC,gBADjB,IAEIC,IAAKF,EAASG,SAFlB,UAGKrB,EAAesB,KACZ,SAACC,EAAUC,GAAX,OACI,cAAC,IAAD,CAEIC,YAAW,UAAKF,EAAIG,IACpBX,MAAOS,EAHX,SAIK,SAACN,GAAD,OACG,eAAC5B,EAAD,qCACI8B,IAAKF,EAASG,UACVH,EAASS,gBACTT,EAASU,iBAHjB,cAII,cAACrC,EAAD,UACI,cAACV,EAAD,CACIgD,IACIN,EAAIO,aAIhB,cAACtC,EAAD,UACK+B,EAAIQ,QAET,cAACpC,EAAD,UACK4B,EAAIS,iBAnBZT,EAAIG,OA0BpBR,EAASe,uBAQlC,cAAC7C,EAAD,UACKU,GACG,cAAC,IAAD,CAAiBa,UApEP,SAACL,GACvB,GAAKA,EAAOM,YAAZ,CAIA,IAAMC,EAAQX,EACVJ,EACAQ,EAAOQ,OAAOC,MACdT,EAAOM,YAAYG,OAEvBhB,EAAgBc,KA0DJ,SACI,cAAC,IAAD,CAAWG,YAAY,WAAWC,UAAU,WAA5C,SACK,SAACC,GAAD,OACG,eAAC7B,EAAD,2BACQ6B,EAASC,gBADjB,IAEIC,IAAKF,EAASG,SAFlB,UAGKvB,EAAawB,KACV,SAACC,EAAUC,GAAX,OACI,cAAC,IAAD,CAEIC,YAAW,UAAKF,EAAIG,IACpBX,MAAOS,EAHX,SAIK,SAACN,GAAD,OACG,eAAC5B,EAAD,qCACI8B,IAAKF,EAASG,UACVH,EAASS,gBACTT,EAASU,iBAHjB,cAII,cAACrC,EAAD,UACI,cAACV,EAAD,CACIgD,IACIN,EAAIO,aAIhB,cAACtC,EAAD,UACK+B,EAAIQ,QAET,cAACpC,EAAD,UACK4B,EAAIS,iBAnBZT,EAAIG,OA0BpBR,EAASe,4B,wFC/IjCvC,EAAW,SAACwC,GAAD,OAAmBC,YAAlB,IAAD,qMAGED","file":"static/js/25.6eebf936.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport loadable from '@loadable/component';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { Ellipsis } from 'style/mixin';\r\nimport DATA_JSON from './data.json';\r\n\r\nconst LazyImage = loadable(() => import('components/common/LazyImage'));\r\n\r\nconst Reorder: React.FC = () => {\r\n    const [verticalData, setVerticalData] = useState<any>('');\r\n    const [horizontalData, setHorizontalData] = useState<any>('');\r\n\r\n    const onRead = () => {\r\n        setVerticalData(DATA_JSON);\r\n        setHorizontalData(DATA_JSON);\r\n    };\r\n\r\n    const onReorder = (list: any, startIndex: number, endIndex: number) => {\r\n        const result = [...list];\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n\r\n        return result;\r\n    };\r\n\r\n    // 가로\r\n    const onDragEndHorizontatl = (result: any) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = onReorder(\r\n            horizontalData,\r\n            result.source.index,\r\n            result.destination.index,\r\n        );\r\n        setHorizontalData(items);\r\n    };\r\n\r\n    // 세로\r\n    const onDragEndVertical = (result: any) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = onReorder(\r\n            verticalData,\r\n            result.source.index,\r\n            result.destination.index,\r\n        );\r\n        setVerticalData(items);\r\n    };\r\n\r\n    useEffect(() => {\r\n        onRead();\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <HorizontalLayout>\r\n                {horizontalData && (\r\n                    <DragDropContext onDragEnd={onDragEndHorizontatl}>\r\n                        <Droppable\r\n                            droppableId=\"dropable\"\r\n                            direction=\"horizontal\">\r\n                            {(provided: any) => (\r\n                                <HorizontalContentsLayout\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}>\r\n                                    {horizontalData.map(\r\n                                        (obj: any, inx: number) => (\r\n                                            <Draggable\r\n                                                key={obj.no}\r\n                                                draggableId={`${obj.no}`}\r\n                                                index={inx}>\r\n                                                {(provided: any) => (\r\n                                                    <ContentsLayout\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}>\r\n                                                        <ImageLayout>\r\n                                                            <LazyImage\r\n                                                                src={\r\n                                                                    obj.imageUrl\r\n                                                                }\r\n                                                            />\r\n                                                        </ImageLayout>\r\n                                                        <Title>\r\n                                                            {obj.title}\r\n                                                        </Title>\r\n                                                        <Contents>\r\n                                                            {obj.contents}\r\n                                                        </Contents>\r\n                                                    </ContentsLayout>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ),\r\n                                    )}\r\n                                    {provided.placeholder}\r\n                                </HorizontalContentsLayout>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                )}\r\n            </HorizontalLayout>\r\n\r\n            <VerticalLayout>\r\n                {verticalData && (\r\n                    <DragDropContext onDragEnd={onDragEndVertical}>\r\n                        <Droppable droppableId=\"dropable\" direction=\"vertical\">\r\n                            {(provided: any) => (\r\n                                <VerticalContentsLayout\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}>\r\n                                    {verticalData.map(\r\n                                        (obj: any, inx: number) => (\r\n                                            <Draggable\r\n                                                key={obj.no}\r\n                                                draggableId={`${obj.no}`}\r\n                                                index={inx}>\r\n                                                {(provided: any) => (\r\n                                                    <ContentsLayout\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}>\r\n                                                        <ImageLayout>\r\n                                                            <LazyImage\r\n                                                                src={\r\n                                                                    obj.imageUrl\r\n                                                                }\r\n                                                            />\r\n                                                        </ImageLayout>\r\n                                                        <Title>\r\n                                                            {obj.title}\r\n                                                        </Title>\r\n                                                        <Contents>\r\n                                                            {obj.contents}\r\n                                                        </Contents>\r\n                                                    </ContentsLayout>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ),\r\n                                    )}\r\n                                    {provided.placeholder}\r\n                                </VerticalContentsLayout>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                )}\r\n            </VerticalLayout>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 60px;\r\n`;\r\n\r\nconst HorizontalLayout = styled.div`\r\n    height: 300px;\r\n    margin-right: 40px;\r\n    overflow-x: auto;\r\n`;\r\n\r\nconst HorizontalContentsLayout = styled.div`\r\n    display: flex;\r\n    width: 1000px;\r\n    align-items: center;\r\n    height: 100%;\r\n    background: #fafafa;\r\n    border: 1px solid #f0f0f0;\r\n    padding: 8px;\r\n`;\r\n\r\nconst VerticalLayout = styled.div`\r\n    height: 800px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst VerticalContentsLayout = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    background: #fafafa;\r\n    border: 1px solid #f0f0f0;\r\n    padding: 8px;\r\n`;\r\n\r\nconst ContentsLayout = styled.div<any>``;\r\n\r\nconst ImageLayout = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    margin-bottom: 4px;\r\n    ${Ellipsis(1)}\r\n`;\r\n\r\nconst Contents = styled.p`\r\n    ${Ellipsis(2)};\r\n`;\r\n\r\nexport default Reorder;\r\n","import {css} from 'styled-components';\r\n\r\nexport const Ellipsis = (clamp: number) => css`\r\n    display: -webkit-box;\r\n    text-overflow: ellipsis;\r\n    -webkit-line-clamp: ${clamp}; \r\n    -webkit-box-orient: vertical;\r\n    word-wrap: break-word;\r\n    overflow: hidden;\r\n`;"],"sourceRoot":""}