{"version":3,"sources":["components/pagination/Pagination.tsx"],"names":["Container","styled","div","Button","props","active","disabled","Pagination","totalCount","limit","pageLimit","page","onClickPage","pageGroup","Math","ceil","totalPage","totalPageList","Array","fill","map","obj","inx","onClick","slice"],"mappings":"0KA4EMA,EAAYC,IAAOC,IAAV,wGAMTC,EAASF,IAAOC,IAAV,uUAQM,SAACE,GAAD,OAAgBA,EAAMC,QAAU,aAC/B,SAACD,GAAD,OAAgBA,EAAMC,QAAU,UACtC,SAACD,GAAD,OAAgBA,EAAME,UAAY,UACjC,SAACF,GAAD,OAAiBA,EAAME,SAAW,cAAgB,aAOjDC,UAzFqB,SAAC,GAM9B,IALHC,EAKE,EALFA,WACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,KACAC,EACE,EADFA,YAEMC,EAAYC,KAAKC,KAAKJ,EAAOD,GAC7BM,EAAYF,KAAKC,KAAKP,EAAaC,GACnCQ,EAAgB,IAAIC,MAAMF,GAC3BG,KAAK,GACLC,KAAI,SAACC,EAAUC,GAAX,OAA2BA,EAAM,KA0B1C,OACI,eAACtB,EAAD,WACI,cAACG,EAAD,CACIG,SAAmB,IAATK,EACVY,QA5BY,WACpBX,EAAY,IAyBR,gBAGA,cAACT,EAAD,CAAQG,SAAmB,IAATK,EAAYY,QAzBlB,WAEZX,EADAD,EAAO,EAAI,EACC,EAEAA,EAAO,IAqBnB,eAECM,EACIO,MAAMX,EAAWA,EAAYH,GAC7BU,KAAI,SAACC,EAAUC,GAAX,OACD,cAACnB,EAAD,CAEIE,OAAQgB,IAAQV,EAAO,EACvBY,QAAS,kBAAMX,EAAYS,EAAM,IAHrC,SAIKA,GAJL,qBACuBC,OAO/B,cAACnB,EAAD,CACIG,SAAUK,IAASK,EAAY,EAC/BO,QAhCQ,WAEZX,EADAD,EAAO,EAAIK,EAAY,EACXA,EAAY,EAEZL,EAAO,IA0BnB,eAGA,cAACR,EAAD,CACIG,SAAUK,IAASK,EAAY,EAC/BO,QA3BY,WACpBX,EAAYI,EAAY,IAwBpB","file":"static/js/33.71c1b11f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    totalCount: number;\r\n    limit: number;\r\n    pageLimit: number;\r\n    page: number;\r\n    onClickPage: (page: number) => void;\r\n}\r\n\r\nconst Pagination: React.FC<Props> = ({\r\n    totalCount, // 총 데이터 수\r\n    limit, // 한 페이지에 나타낼 데이터 수\r\n    pageLimit, // 한 화면에 나타낼 페이지 수\r\n    page, // 현재 페이지\r\n    onClickPage,\r\n}) => {\r\n    const pageGroup = Math.ceil(page / pageLimit);\r\n    const totalPage = Math.ceil(totalCount / limit);\r\n    const totalPageList = new Array(totalPage)\r\n        .fill(0)\r\n        .map((obj: any, inx: number) => inx + 1);\r\n\r\n    const onClickLastPrev = () => {\r\n        onClickPage(0);\r\n    };\r\n\r\n    const onClickPrev = () => {\r\n        if (page - 1 < 0) {\r\n            onClickPage(0);\r\n        } else {\r\n            onClickPage(page - 1);\r\n        }\r\n    };\r\n\r\n    const onClickNext = () => {\r\n        if (page + 1 > totalPage - 1) {\r\n            onClickPage(totalPage - 1);\r\n        } else {\r\n            onClickPage(page + 1);\r\n        }\r\n    };\r\n\r\n    const onClickLastNext = () => {\r\n        onClickPage(totalPage - 1);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Button\r\n                disabled={page === 0}\r\n                onClick={onClickLastPrev}>{`<<`}</Button>\r\n            <Button disabled={page === 0} onClick={onClickPrev}>{`<`}</Button>\r\n\r\n            {totalPageList\r\n                .slice(pageGroup, pageGroup + pageLimit)\r\n                .map((obj: any, inx: number) => (\r\n                    <Button\r\n                        key={`pagination-${inx}`}\r\n                        active={obj === page + 1}\r\n                        onClick={() => onClickPage(obj - 1)}>\r\n                        {obj}\r\n                    </Button>\r\n                ))}\r\n\r\n            <Button\r\n                disabled={page === totalPage - 1}\r\n                onClick={onClickNext}>{`>`}</Button>\r\n            <Button\r\n                disabled={page === totalPage - 1}\r\n                onClick={onClickLastNext}>{`>>`}</Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Button = styled.div<any>`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 24px;\r\n    height: 24px;\r\n    border: 1px solid #e9edf1;\r\n    border-radius: 2px;\r\n    background: ${(props: any) => props.active && '#e9edf1'};\r\n    font-weight: ${(props: any) => props.active && 'bold'};\r\n    color: ${(props: any) => props.disabled && '#ddd'};\r\n    cursor: ${(props: any) => (props.disabled ? 'not-allowed' : 'pointer')};\r\n\r\n    & ~ & {\r\n        margin-left: 4px;\r\n    }\r\n`;\r\n\r\nexport default Pagination;\r\n"],"sourceRoot":""}