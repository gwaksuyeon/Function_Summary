{"version":3,"sources":["reducers/options.ts","routers/index.tsx","reportWebVitals.ts","reducers/test.ts","reducers/index.ts","sagas/test.ts","sagas/index.ts","store/index.ts","index.tsx","common/variables.ts"],"names":["OPTION_CREATE","OPTION_DELETE","AMOUNT_PLUS","AMOUNT_MINUS","OPTION_RESET","optionCreate","createAction","optionDelete","amountPlus","amountMinus","optionReset","Reducer","createReducer","combineOptionList","separationOptionList","noOptionList","state","action","produce","draft","payload","type","selectedList","findIndex","f","selected2","no","concat","buyCnt","selected1","index","filter","inx","Main","loadable","Roulette","Share","Pagination","InfiniteScroll","InfiniteButton","Roles","Editor","Reorder","CSV","Chart","PopupNotice","GoodsOption","Root","basename","ROUTE_ROOT","GIT_HUB","path","MAIN","exact","component","ROULETTE","SHARE","PAGINATION","INFINITY_SCROLL_PAGING","INFINITY_PAGING","ROLES","EDITOR","REORDER","CHART","POPUP_NOTICE","GOODS_OPTION","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TEST","TEST_SUCCESS","test","rootReducer","combineReducers","options","watchTest","put","takeEvery","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","Reducers","composeWithDevTools","applyMiddleware","run","enableES5","ReactDOM","render","document","getElementById","ROLES_TYPE","MASTER","ADMIN","CS_ADMIN"],"mappings":"mUAIaA,EAAgB,wBAChBC,EAAgB,wBAChBC,EAAc,sBACdC,EAAe,uBACfC,EAAe,uBAGfC,EAAeC,uBAAaN,EAAbM,GACfC,EAAeD,uBAAaL,EAAbK,GACfE,EAAaF,uBAAaJ,EAAbI,GACbG,EAAcH,uBAAaH,EAAbG,GACdI,EAAcJ,uBAAaF,EAAbE,GAyBrBK,EAAUC,wBANY,CACxBC,kBAAmB,GACnBC,qBAAsB,GACtBC,aAAc,KAGW,mBACxBf,GAAgB,SAACgB,EAAOC,GAAR,OACbC,YAAQF,GAAO,SAACG,GACZ,MAA+BF,EAAOG,QAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAEd,GAAa,YAATD,EAAoB,CACpB,IAAME,EAAYP,EAAMH,kBAAkBU,WACtC,SAACC,GAAD,OAAYA,EAAEC,UAAUC,KAAOJ,EAAaG,UAAUC,OAGvC,IAAfH,EACAJ,EAAMN,kBACFG,EAAMH,kBAAkBc,OAAOL,GAEnCH,EAAMN,kBAAkBU,GAAWK,OAC/BZ,EAAMH,kBAAkBU,GAAWK,OAAS,EAIxD,GAAa,eAATP,EAAuB,CACvB,IAAME,EAAYP,EAAMF,qBAAqBS,WACzC,SAACC,GAAD,OACIA,EAAEK,UAAUH,KAAOJ,EAAaO,UAAUH,IAC1CF,EAAEC,UAAUC,KAAOJ,EAAaG,UAAUC,OAG/B,IAAfH,EACAJ,EAAML,qBACFE,EAAMF,qBAAqBa,OAAOL,GAEtCH,EAAML,qBAAqBS,GAAWK,OAClCZ,EAAMF,qBAAqBS,GAAWK,OAAS,EAI9C,aAATP,IACAF,EAAMJ,aAAe,CAACO,UApCT,cAwCxBrB,GAAgB,SAACe,EAAOC,GAAR,OACbC,YAAQF,GAAO,SAACG,GACZ,MAAwBF,EAAOG,QAAvBC,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAED,YAATT,IACAF,EAAMN,kBAAoBG,EAAMH,kBAAkBkB,QAC9C,SAACP,EAAQQ,GAAT,OAAyBA,IAAQF,MAI5B,eAATT,IACAF,EAAML,qBAAuBE,EAAMF,qBAAqBiB,QACpD,SAACP,EAAQQ,GAAT,OAAyBA,IAAQF,YApDxB,cAyDxB5B,GAAc,SAACc,EAAOC,GAAR,OACXC,YAAQF,GAAO,SAACG,GACZ,MAAwBF,EAAOG,QAAvBC,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAED,YAATT,IACAF,EAAMN,kBAAkBiB,GAAOF,OAC3BZ,EAAMH,kBAAkBiB,GAAOF,OAAS,GAGnC,eAATP,IACAF,EAAML,qBAAqBgB,GAAOF,OAC9BZ,EAAMF,qBAAqBgB,GAAOF,OAAS,GAGtC,aAATP,IACAF,EAAMJ,aAAa,GAAGa,OAASZ,EAAMD,aAAa,GAAGa,OAAS,SAxEjD,cA4ExBzB,GAAe,SAACa,EAAOC,GAAR,OACZC,YAAQF,GAAO,SAACG,GACZ,MAAwBF,EAAOG,QAAvBC,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAED,YAATT,IACAF,EAAMN,kBAAkBiB,GAAOF,OAC3BZ,EAAMH,kBAAkBiB,GAAOF,OAAS,EAAI,EACtC,EACAZ,EAAMH,kBAAkBiB,GAAOF,OAAS,GAGzC,eAATP,IACAF,EAAML,qBAAqBgB,GAAOF,OAC9BZ,EAAMF,qBAAqBgB,GAAOF,OAAS,EAAI,EACzC,EACAZ,EAAMF,qBAAqBgB,GAAOF,OAAS,GAG5C,aAATP,IACAF,EAAMJ,aAAa,GAAGa,OAClBZ,EAAMD,aAAa,GAAGa,OAAS,EAAI,EAC7B,EACAZ,EAAMD,aAAa,GAAGa,OAAS,SAlG5B,cAsGxBxB,GAAe,SAACY,EAAOC,GAAR,OACZC,YAAQF,GAAO,SAACG,GACZA,EAAMN,kBAAoB,GAC1BM,EAAML,qBAAuB,GAC7BK,EAAMJ,aAAe,SA1GJ,IA8GdJ,O,mIChJTsB,EAAOC,aAAS,kBAAM,wDACtBC,EAAWD,aAAS,kBAAM,gEAC1BE,EAAQF,aAAS,kBAAM,wDACvBG,EAAaH,aAAS,kBAAM,wDAC5BI,EAAiBJ,aAAS,kBAAM,wDAChCK,EAAiBL,aAAS,kBAAM,wDAChCM,EAAQN,aAAS,kBAAM,wDACvBO,EAASP,aAAS,kBAAM,gEACxBQ,EAAUR,aAAS,kBAAM,gEACzBS,EAAMT,aAAS,kBAAM,wDACrBU,EAAQV,aAAS,kBAAM,gEACvBW,EAAcX,aAAS,kBAAM,+DAC7BY,EAAcZ,aAAS,kBAAM,wDA4CpBa,EA1CQ,WACnB,OACI,cAAC,IAAD,CAAeC,SAAUC,IAAWC,QAApC,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAMF,IAAWG,KAAMC,OAAK,EAACC,UAAWrB,IAC/C,cAAC,IAAD,CAAOkB,KAAMF,IAAWM,SAAUF,OAAK,EAACC,UAAWnB,IACnD,cAAC,IAAD,CAAOgB,KAAMF,IAAWO,MAAOH,OAAK,EAACC,UAAWlB,IAChD,cAAC,IAAD,CACIe,KAAMF,IAAWQ,WACjBJ,OAAK,EACLC,UAAWjB,IAEf,cAAC,IAAD,CACIc,KAAMF,IAAWS,uBACjBL,OAAK,EACLC,UAAWhB,IAEf,cAAC,IAAD,CACIa,KAAMF,IAAWU,gBACjBN,OAAK,EACLC,UAAWf,IAEf,cAAC,IAAD,CAAOY,KAAMF,IAAWW,MAAOP,OAAK,EAACC,UAAWd,IAChD,cAAC,IAAD,CAAOW,KAAMF,IAAWY,OAAQR,OAAK,EAACC,UAAWb,IACjD,cAAC,IAAD,CAAOU,KAAMF,IAAWa,QAAST,OAAK,EAACC,UAAWZ,IAClD,cAAC,IAAD,CAAOS,KAAMF,IAAWN,IAAKU,OAAK,EAACC,UAAWX,IAC9C,cAAC,IAAD,CAAOQ,KAAMF,IAAWc,MAAOV,OAAK,EAACC,UAAWV,IAChD,cAAC,IAAD,CACIO,KAAMF,IAAWe,aACjBX,OAAK,EACLC,UAAWT,IAEf,cAAC,IAAD,CACIM,KAAMF,IAAWgB,aACjBZ,OAAK,EACLC,UAAWR,UCzChBoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wDCLDQ,EAAO,YACPC,EAAe,oBA6BbjE,GA1BKL,uBAAaqE,EAAbrE,GACOA,uBAAasE,EAAbtE,GAkBXM,wBAJY,CAC1BiE,KAAM,QAGqB,eAC1BD,GAAe,SAAC5D,EAAOC,GAAR,OACdC,YAAQF,GAAO,SAACG,GACdA,EAAM0D,KAAO,uB,QCrBJC,EALKC,0BAAgB,CAChCF,OACAG,c,oCCHMH,G,WAIOI,GAJjB,SAAUJ,EAAK5D,GAAf,iEACE,OADF,SACQiE,YAAI,CAAE7D,KAAMuD,EAAcxD,QAASH,EAAOG,UADlD,uCAIO,SAAU6D,IAAV,iEACL,OADK,SACCE,YAAUR,EAAME,GADjB,uC,eCJUO,GAAV,SAAUA,IAAV,iEACL,OADK,SACCC,YAAI,CAACC,YAAKL,KADX,uCCIP,IAAMM,EAAiBC,cACjBC,EAAQC,sBACZC,EACAC,8BAAoBC,0BAAgBN,KAGtCA,EAAeO,IAAIV,GAEJK,QCLfM,cAEAC,IAASC,OACL,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJS,SAASC,eAAe,SAM5BjC,K,+BCtBA,oEAAO,IAAMjB,EAAa,CACtBC,QAAS,oBACTE,KAAM,IACNG,SAAU,YACVC,MAAO,SACPC,WAAY,cACZC,uBAAwB,mBACxBC,gBAAiB,mBACjBC,MAAO,SACPC,OAAQ,UACRC,QAAS,WACTnB,IAAK,OACLoB,MAAO,SACPC,aAAc,eACdC,aAAc,gBAGLmC,EAAkB,CAC3BC,OAAQ,uCACRC,MAAO,qBACPC,SAAU,0B","file":"static/js/main.479d0363.chunk.js","sourcesContent":["import { createAction, ActionType, createReducer } from 'typesafe-actions';\r\nimport produce from 'immer';\r\n\r\n// action types\r\nexport const OPTION_CREATE = 'options/OPTION_CREATE';\r\nexport const OPTION_DELETE = 'options/OPTION_DELETE';\r\nexport const AMOUNT_PLUS = 'options/AMOUNT_PLUS';\r\nexport const AMOUNT_MINUS = 'options/AMOUNT_MINUS';\r\nexport const OPTION_RESET = 'options/OPTION_RESET';\r\n\r\n// actions\r\nexport const optionCreate = createAction(OPTION_CREATE)<any>();\r\nexport const optionDelete = createAction(OPTION_DELETE)<any>();\r\nexport const amountPlus = createAction(AMOUNT_PLUS)<any>();\r\nexport const amountMinus = createAction(AMOUNT_MINUS)<any>();\r\nexport const optionReset = createAction(OPTION_RESET)();\r\n\r\nconst actions = {\r\n    optionCreate,\r\n    optionDelete,\r\n    amountPlus,\r\n    amountMinus,\r\n    optionReset,\r\n};\r\n\r\ntype Actions = ActionType<typeof actions>;\r\n\r\ninterface State {\r\n    combineOptionList: any[];\r\n    separationOptionList: any[];\r\n    noOptionList: any[];\r\n}\r\n\r\n// default state\r\nconst initialState: State = {\r\n    combineOptionList: [],\r\n    separationOptionList: [],\r\n    noOptionList: [],\r\n};\r\n\r\nconst Reducer = createReducer<State, Actions>(initialState, {\r\n    [OPTION_CREATE]: (state, action) =>\r\n        produce(state, (draft) => {\r\n            const { type, selectedList } = action.payload;\r\n\r\n            if (type === 'combine') {\r\n                const findIndex = state.combineOptionList.findIndex(\r\n                    (f: any) => f.selected2.no === selectedList.selected2.no,\r\n                );\r\n\r\n                if (findIndex === -1) {\r\n                    draft.combineOptionList =\r\n                        state.combineOptionList.concat(selectedList);\r\n                } else {\r\n                    draft.combineOptionList[findIndex].buyCnt =\r\n                        state.combineOptionList[findIndex].buyCnt + 1;\r\n                }\r\n            }\r\n\r\n            if (type === 'separation') {\r\n                const findIndex = state.separationOptionList.findIndex(\r\n                    (f: any) =>\r\n                        f.selected1.no === selectedList.selected1.no &&\r\n                        f.selected2.no === selectedList.selected2.no,\r\n                );\r\n\r\n                if (findIndex === -1) {\r\n                    draft.separationOptionList =\r\n                        state.separationOptionList.concat(selectedList);\r\n                } else {\r\n                    draft.separationOptionList[findIndex].buyCnt =\r\n                        state.separationOptionList[findIndex].buyCnt + 1;\r\n                }\r\n            }\r\n\r\n            if (type === 'noOption') {\r\n                draft.noOptionList = [selectedList];\r\n            }\r\n        }),\r\n\r\n    [OPTION_DELETE]: (state, action) =>\r\n        produce(state, (draft) => {\r\n            const { type, index } = action.payload;\r\n\r\n            if (type === 'combine') {\r\n                draft.combineOptionList = state.combineOptionList.filter(\r\n                    (f: any, inx: number) => inx !== index,\r\n                );\r\n            }\r\n\r\n            if (type === 'separation') {\r\n                draft.separationOptionList = state.separationOptionList.filter(\r\n                    (f: any, inx: number) => inx !== index,\r\n                );\r\n            }\r\n        }),\r\n\r\n    [AMOUNT_PLUS]: (state, action) =>\r\n        produce(state, (draft) => {\r\n            const { type, index } = action.payload;\r\n\r\n            if (type === 'combine') {\r\n                draft.combineOptionList[index].buyCnt =\r\n                    state.combineOptionList[index].buyCnt + 1;\r\n            }\r\n\r\n            if (type === 'separation') {\r\n                draft.separationOptionList[index].buyCnt =\r\n                    state.separationOptionList[index].buyCnt + 1;\r\n            }\r\n\r\n            if (type === 'noOption') {\r\n                draft.noOptionList[0].buyCnt = state.noOptionList[0].buyCnt + 1;\r\n            }\r\n        }),\r\n\r\n    [AMOUNT_MINUS]: (state, action) =>\r\n        produce(state, (draft) => {\r\n            const { type, index } = action.payload;\r\n\r\n            if (type === 'combine') {\r\n                draft.combineOptionList[index].buyCnt =\r\n                    state.combineOptionList[index].buyCnt - 1 < 1\r\n                        ? 1\r\n                        : state.combineOptionList[index].buyCnt - 1;\r\n            }\r\n\r\n            if (type === 'separation') {\r\n                draft.separationOptionList[index].buyCnt =\r\n                    state.separationOptionList[index].buyCnt - 1 < 1\r\n                        ? 1\r\n                        : state.separationOptionList[index].buyCnt - 1;\r\n            }\r\n\r\n            if (type === 'noOption') {\r\n                draft.noOptionList[0].buyCnt =\r\n                    state.noOptionList[0].buyCnt - 1 < 1\r\n                        ? 1\r\n                        : state.noOptionList[0].buyCnt - 1;\r\n            }\r\n        }),\r\n\r\n    [OPTION_RESET]: (state, action) =>\r\n        produce(state, (draft) => {\r\n            draft.combineOptionList = [];\r\n            draft.separationOptionList = [];\r\n            draft.noOptionList = [];\r\n        }),\r\n});\r\n\r\nexport default Reducer;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport { ROUTE_ROOT } from 'common/variables';\r\n\r\nconst Main = loadable(() => import('pages/main'));\r\nconst Roulette = loadable(() => import('pages/roulette'));\r\nconst Share = loadable(() => import('pages/share'));\r\nconst Pagination = loadable(() => import('pages/pagination'));\r\nconst InfiniteScroll = loadable(() => import('pages/infinite/scroll'));\r\nconst InfiniteButton = loadable(() => import('pages/infinite/button'));\r\nconst Roles = loadable(() => import('pages/roles'));\r\nconst Editor = loadable(() => import('pages/editor'));\r\nconst Reorder = loadable(() => import('pages/reorder'));\r\nconst CSV = loadable(() => import('pages/csv'));\r\nconst Chart = loadable(() => import('pages/chart'));\r\nconst PopupNotice = loadable(() => import('pages/popupNotice'));\r\nconst GoodsOption = loadable(() => import('pages/goodsOption'));\r\n\r\nconst Root: React.FC = () => {\r\n    return (\r\n        <BrowserRouter basename={ROUTE_ROOT.GIT_HUB}>\r\n            <Switch>\r\n                <Route path={ROUTE_ROOT.MAIN} exact component={Main} />\r\n                <Route path={ROUTE_ROOT.ROULETTE} exact component={Roulette} />\r\n                <Route path={ROUTE_ROOT.SHARE} exact component={Share} />\r\n                <Route\r\n                    path={ROUTE_ROOT.PAGINATION}\r\n                    exact\r\n                    component={Pagination}\r\n                />\r\n                <Route\r\n                    path={ROUTE_ROOT.INFINITY_SCROLL_PAGING}\r\n                    exact\r\n                    component={InfiniteScroll}\r\n                />\r\n                <Route\r\n                    path={ROUTE_ROOT.INFINITY_PAGING}\r\n                    exact\r\n                    component={InfiniteButton}\r\n                />\r\n                <Route path={ROUTE_ROOT.ROLES} exact component={Roles} />\r\n                <Route path={ROUTE_ROOT.EDITOR} exact component={Editor} />\r\n                <Route path={ROUTE_ROOT.REORDER} exact component={Reorder} />\r\n                <Route path={ROUTE_ROOT.CSV} exact component={CSV} />\r\n                <Route path={ROUTE_ROOT.CHART} exact component={Chart} />\r\n                <Route\r\n                    path={ROUTE_ROOT.POPUP_NOTICE}\r\n                    exact\r\n                    component={PopupNotice}\r\n                />\r\n                <Route\r\n                    path={ROUTE_ROOT.GOODS_OPTION}\r\n                    exact\r\n                    component={GoodsOption}\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Root;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createAction, ActionType, createReducer } from 'typesafe-actions'\r\nimport produce from 'immer';\r\n\r\n// action types\r\nexport const TEST = 'test/TEST';\r\nexport const TEST_SUCCESS = 'test/TEST_SUCCESS';\r\n\r\n// actions\r\nexport const test = createAction(TEST)<any>();\r\nexport const testSuccess = createAction(TEST_SUCCESS)<any>();\r\n\r\nconst actions = {\r\n  test,\r\n  testSuccess,\r\n}\r\n\r\ntype Actions = ActionType<typeof actions>;\r\n\r\ninterface State {\r\n  test: string;\r\n}\r\n\r\n// default state\r\nconst initialState: State = {\r\n  test: 'test',\r\n}\r\n\r\nconst Reducer = createReducer<State, Actions>(initialState, {\r\n  [TEST_SUCCESS]: (state, action) => \r\n    produce(state, (draft) => {\r\n      draft.test = 'test success';\r\n    })\r\n})\r\n\r\nexport default Reducer;","import { combineReducers } from 'redux';\r\nimport test from './test';\r\nimport options from './options';\r\n\r\nconst rootReducer = combineReducers({\r\n    test,\r\n    options,\r\n});\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import {takeEvery, put} from 'redux-saga/effects'\r\nimport { TEST, TEST_SUCCESS } from 'reducers/test';\r\n\r\nfunction* test(action: any) {\r\n  yield put({ type: TEST_SUCCESS, payload: action.payload});\r\n}\r\n\r\nexport function* watchTest() {\r\n  yield takeEvery(TEST, test);\r\n}","import {all, fork} from 'redux-saga/effects';\r\nimport {watchTest} from './test';\r\n\r\nexport function* rootSaga() {\r\n  yield all([fork(watchTest)]);\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport Reducers from 'reducers';\r\nimport { rootSaga } from 'sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  Reducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Routes from 'routers';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { enableES5 } from 'immer';\r\n\r\nimport store from 'store';\r\n\r\nenableES5();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Routes />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const ROUTE_ROOT = {\r\n    GIT_HUB: '/Function_Summary',\r\n    MAIN: '/',\r\n    ROULETTE: '/roulette',\r\n    SHARE: '/share',\r\n    PAGINATION: '/pagination',\r\n    INFINITY_SCROLL_PAGING: '/infinite/scroll',\r\n    INFINITY_PAGING: '/infinite/paging',\r\n    ROLES: '/roles',\r\n    EDITOR: '/editor',\r\n    REORDER: '/reorder',\r\n    CSV: '/csv',\r\n    CHART: '/chart',\r\n    POPUP_NOTICE: '/popupNotice',\r\n    GOODS_OPTION: '/goodsoption',\r\n};\r\n\r\nexport const ROLES_TYPE: any = {\r\n    MASTER: '마스터관리자',\r\n    ADMIN: '관리자',\r\n    CS_ADMIN: 'CS담당자',\r\n};\r\n"],"sourceRoot":""}